
# "h" shows entire history
# "h <pattern>" shows you history entries matching the string
# ht is the same thing, but runs it through tail -20.
h() {
    test -n "$1" && history | grep -i "$1" || history
}

# Look up error codes
errno() {
    perl -e "\$! = $1; print \"\$! \\n\";"
}

# machine type, on solaris
hw() {
    [[ "$OS" != "SunOS" ]] && {
        echo "'hw' is only available in SunOS."
        return
    }
    prtdiag | head -1 | \
        sed "s/^System Configuration: *Sun Microsystems *//" | \
        sed "s/^`uname -m` *//"
}

# Translate AS numbers / RR communities
astr() {
    echo "$1" | tr '[A-J0-9]' '[0-9A-J]'
}

# Get the current git branch (for shell prompt).
# _preserve passes through $? unmolested, both for displaying it in the prompt
# and for using it generally.
parse_git_branch() {
    _preserve=$?
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
    return $_preserve
}

# Easy clone of a project that lives on Dreamhost
gitclone_dreamhost() {
    _user="scsiboy"
    _server="git.tangledhelix.com"

    test -n "$1" || {
        echo "Missing argument (repo to clone)"
        return
    }

    git clone ssh://$_user@$_server/~/git/$1 $2
}

# NTT git environment is a little weird, streamline it.
gitclone_ntt() {
    _path="/usr/local/bin/git-upload-pack"
    _user="dan"
    _server="admin1.mlpsca01.us.to.gin.ntt.net"

    test -n "$1" || {
        echo "Missing argument (repo to clone)"
        return
    }

    git clone -o ntt -u $_path ssh://$_user@$_server/~/git/$1 $2
}

# Give me a shortened version of the local hostname.
# If it's 1-3 atoms, give me only the first.
# If it's more than that, give me the first two.
short_nodename() {

    echo $HOST | perl -p -e '
        if ( scalar( split( /\./ ) ) > 3 ) {
            s/^([^.]+\.[^.]+).*$/$1/;
        } else {
            s/^([^.]+).*$/$1/;
        }
    '

    # Alternate version from Ravi. Much shorter, but it gives
    # you three atoms on long names, not two, and on a single
    # atom it doesn't return anything at all.
    #perl -le '$ENV{HOST}=~/^((?:[^.]+\.){2}[^.]+|[^.]+)\./;print$1'

}

