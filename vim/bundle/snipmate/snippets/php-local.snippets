###########################################################################
# Simpletest snippets

snippet test_c
	class Test_${1:something} extends UnitTestCase {
	
	    function Test_$1() {
	        $this->UnitTestCase( '${2:Test class description}' );
	    }
	
	    ${3}
	}

snippet test_f
	function test_${1:some_particular_thing}() {
	    ${2}
	}

snippet ass assertTrue()
	$this->assertTrue( ${1:condition}, '${2:Description}: %s' );

snippet ass assertFalse()
	$this->assertFalse( ${1:condition}, '${2:Description}: %s' );

snippet ass assertEqual()
	$this->assertEqual( ${1:x}, ${2:y}, '${3:Description}: %s' );

snippet ass assertNotEqual()
	$this->assertNotEqual( ${1:x}, ${2:y}, '${3:Description}: %s' );

snippet ass assertNull()
	$this->assertNull( ${1:condition}, '${2:Description}: %s' );

snippet ass assertNotNull()
	$this->assertNotNull( ${1:condition}, '${2:Description}: %s' );

snippet ass assertPattern()
	$this->assertPattern( '/${1:pattern}/', ${2:x}, '${3:Description}: %s' );

snippet ass assertNoPattern()
	$this->assertNoPattern( '/${1:pattern}/', ${2:x}, '${3:Description}: %s' );

snippet ass assertIsA()
	$this->assertIsA( ${1:object}, '${2:type}', '${3:Description}: %s' );

snippet ass assertNotA()
	$this->assertNotA( ${1:object}, '${2:type}', '${3:Description}: %s' );

snippet ass assertIdentical()
	$this->assertIdentical( ${1:x}, ${2:y}, '${3:Description}: %s' );

snippet ass assertNotIdentical()
	$this->assertNotIdentical( ${1:x}, ${2:y}, '${3:Description}: %s' );

snippet ass assertWithinMargin()
	$this->assertWithinMargin( ${1:x}, ${2:y}, ${3:margin}, '${4:Description}: %s' );

snippet ass assertOutsideMargin()
	$this->assertOutsideMargin( ${1:x}, ${2:y}, ${3:margin}, '${4:Description}: %s' );
snippet ass assertReference()
	$this->assertReference( ${1:x}, ${2:y}, '${3:Description}: %s' );

snippet ass assertClone()
	$this->assertClone( ${1:x}, ${2:y}, '${3:Description}: %s' );

snippet f_noerr
	$this->assertFalse( $f->error_flag, 'error_flag is not set: %s' );
	$this->assertFalse( $f->error_msg, 'error_msg is not set: %s' );

snippet f_err
	$this->assertTrue( $f->error_flag, 'error_flag is set: %s' );
	$this->assertEqual( $f->error_msg, '${1:text}', 'error_msg is correct: %s' );

snippet f_new
	$f = new Fundament( $this->fundament_cfg_file );

snippet f_cfg
	var $fundament_cfg_file = 'fundament_test.cfg';

snippet f_auto
	$this->assertTrue( $f->_db_has_autocommit(), 'db has autocommit: %s' );

snippet f_autof
	function test_db_has_autocommit() {
	    $f = new Fundament( $this->fundament_cfg_file );
	
	    $this->assertTrue( $f->_db_has_autocommit(), 'db has autocommit: %s' );
	}

###########################################################################

